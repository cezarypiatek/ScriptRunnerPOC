<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ScriptRunner.GUI.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="700"
        x:Class="ScriptRunner.GUI.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Title="ScriptRunner.GUI"
        FontFamily="Segoe UI Variable">

    <Design.DataContext>
        <vm:MainWindowViewModel />
    </Design.DataContext>
  <Grid x:Name="MainGrid">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="200" ></ColumnDefinition>
      <ColumnDefinition Width="4"></ColumnDefinition>
      <ColumnDefinition Width="*"></ColumnDefinition>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"></RowDefinition>
      <RowDefinition Height="*" MinHeight="40"></RowDefinition>
      <RowDefinition Height="3" MaxHeight="3"></RowDefinition>
      <RowDefinition Height="300" ></RowDefinition>
    </Grid.RowDefinitions>
    <StackPanel Grid.Row="0" Grid.ColumnSpan="3" IsVisible="{Binding IsNewerVersionAvailable}" Height="75">
        <Border BorderBrush="#FF0000" BorderThickness="1"  >
            <StackPanel  Orientation="Horizontal" Margin="20" VerticalAlignment="Center">
                <TextBlock VerticalAlignment="Center">A newer version is available</TextBlock>
                <Button Margin="20,0,0,0" VerticalAlignment="Center" Command="{Binding CheckForUpdates}">Check for update</Button>
            </StackPanel>
        </Border>
    </StackPanel>
    <Grid Grid.Row="1" Grid.Column="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
      </Grid.RowDefinitions>
      <!-- List of available actions, selectable -->
      <ListBox Items="{Binding Actions}" SelectedItem="{Binding SelectedAction, Mode=TwoWay}">
        <ListBox.DataTemplates>
          <DataTemplate>
            <TextBlock Text="{Binding Name}"></TextBlock>
          </DataTemplate>
        </ListBox.DataTemplates>
      </ListBox>
      <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" VerticalAlignment="Bottom" Grid.Row="1">
        <Button i:Attached.Icon="fas fa-cog" Margin="5" Height="35" Width="50" FontSize="18" Command="{Binding OpenSettingsWindow}"   ToolTip.Tip="Configure actions sources"/>
        <Button i:Attached.Icon="fas fa-sync" Height="35" Width="50" FontSize="18" Command="{Binding RefreshSettings}"   ToolTip.Tip="Refresh actions" />
      </StackPanel>
    </Grid>
    <GridSplitter Grid.Column="1" Grid.Row="1" ResizeDirection="Columns"></GridSplitter>
    <!-- Below instead of stack panel will be Reactive UI View Host displaying current action props-->
    <ScrollViewer Grid.Column="2" Grid.Row="1">
      <StackPanel Margin="20, 10" IsVisible="{Binding IsActionSelected, Mode=OneWay}">
        <StackPanel Orientation="Vertical">

          <TextBlock Classes="h1" Margin="10"
                     Text="{Binding SelectedAction.Name}" />

          <TextBlock Margin="10, 0"
                     Text="{Binding SelectedAction.Description}" TextWrapping="Wrap"/>

          <TextBox Text="{Binding SelectedAction.Command}" Background="#474747" CornerRadius="0" BorderBrush="#6e6e6e" Padding="5" Margin="10" BorderThickness="1" IsReadOnly="True" TextWrapping="Wrap"></TextBox>
          <Button Margin="5,5,5,15" IsVisible="{Binding !SelectedActionInstalled}" Command="{Binding InstallScript}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center">Install</Button>
        </StackPanel>
        <StackPanel IsEnabled="{Binding SelectedActionInstalled}">
          <StackPanel>
            <StackPanel Orientation="Horizontal">
              <TextBlock Classes="h2">Parameters: </TextBlock>
              <ComboBox Margin="20,0,0,5" Items="{Binding SelectedAction.PredefinedArgumentSets}" SelectedItem="{Binding SelectedArgumentSet, Mode=TwoWay}" MinWidth="200">
                <ComboBox.DataTemplates>
                  <DataTemplate>
                    <TextBlock Text="{Binding Description}"></TextBlock>
                  </DataTemplate>
                </ComboBox.DataTemplates>
              </ComboBox>
            </StackPanel>
            <ItemsControl Items="{Binding ActionParametersPanel}"></ItemsControl>
          </StackPanel>

          <StackPanel Orientation="Horizontal" Margin="0, 20, 0 , 5">
            <Button Width="60" HorizontalContentAlignment="Center" Command="{Binding RunScript}">Run</Button>
          </StackPanel>
        </StackPanel>

      </StackPanel>
    </ScrollViewer>
    <GridSplitter Grid.Row="2" Grid.Column="0"  ResizeDirection="Rows" Grid.ColumnSpan="3" BorderThickness="0,1,0,0" BorderBrush="#828282" ></GridSplitter>
    <TabControl x:Name="RunningJobsPanel" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Items="{Binding RunningJobs}" SelectedItem="{Binding SelectedRunningJob, Mode=TwoWay}">
      <TabControl.ItemTemplate>
        <DataTemplate>
          <StackPanel>
            <StackPanel Orientation="Horizontal">
              <TextBlock FontSize="16" Text="{Binding Tile}" Margin="0,0,5,0" />
              <TextBlock FontSize="16" Text="{Binding CommandName}" />
            </StackPanel>
            <TextBlock FontSize="12" Text="{Binding Status, StringFormat='({0})'}"></TextBlock>
          </StackPanel>
        </DataTemplate>
      </TabControl.ItemTemplate>
      <TabControl.ContentTemplate>
        <DataTemplate DataType="vm:RunningJobViewModel">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="*"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBox  Text="{Binding ExecutedCommand}"  Background="#474747" CornerRadius="0" BorderBrush="#6e6e6e" Padding="5"  Margin="10" BorderThickness="1" IsReadOnly="True" TextWrapping="Wrap" VerticalAlignment="Stretch"></TextBox>
            <TextBox Grid.Row="1" Classes="consoleOutput" Text="{Binding CurrentRunOutput, Mode=OneWay}" CaretIndex="{Binding OutputIndex, Mode=OneWay}" />
            <TextBox IsVisible="{Binding ExecutionPending, Mode=OneWay}" Text="{Binding InputCommand, Mode=TwoWay}" KeyUp="AcceptCommand"  Grid.Row="2" Margin="0,10,10,0" FontFamily="Consolas"></TextBox>
            <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,10,0,10">
              <Button  Width="60" HorizontalContentAlignment="Center" Margin="10,0"
                       Command="{Binding CancelExecution}" IsEnabled="{Binding ExecutionPending}">Cancel</Button>
              <ProgressBar Classes="executionProgressBar" IsIndeterminate="{Binding ExecutionPending}" />
            </StackPanel>
          </Grid>

        </DataTemplate>
      </TabControl.ContentTemplate>

    </TabControl>
  </Grid>

</Window>