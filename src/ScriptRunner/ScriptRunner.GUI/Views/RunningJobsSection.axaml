<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:ScriptRunner.GUI.ViewModels"
             xmlns:gui="clr-namespace:ScriptRunner.GUI"
             xmlns:avalonia="https://github.com/projektanker/icons.avalonia"
             xmlns:scriptConfigs="clr-namespace:ScriptRunner.GUI.ScriptConfigs"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="ScriptRunner.GUI.Views.RunningJobsSection"
             x:DataType="viewModels:MainWindowViewModel"
             >
    <TabControl x:Name="RunningJobsPanel" ItemsSource="{Binding RunningJobs}" SelectedItem="{Binding SelectedRunningJob, Mode=TwoWay}" >
      <TabControl.ItemTemplate>
        <DataTemplate x:DataType="viewModels:RunningJobViewModel">
          <StackPanel Orientation="Horizontal">
              <StackPanel >
                  <StackPanel Orientation="Horizontal">
                      <TextBlock FontSize="16" Text="{Binding Tile}" />
                  </StackPanel>
                  <TextBlock FontSize="12" Text="{Binding Status, StringFormat='({0})'}" Foreground="{Binding Status, Converter={x:Static gui:JobStatusToColorConverter.Instance}}"></TextBlock>
              </StackPanel>
              <Button avalonia:Attached.Icon="fas fa-times"  Height="20" Width="30" Background="Transparent" VerticalContentAlignment="Top" VerticalAlignment="Top" FontSize="8"  ToolTip.Tip="Close tab" CommandParameter="{Binding}" Command="{Binding $parent[TabControl].DataContext.CloseJob}" />
          </StackPanel>
        </DataTemplate>
      </TabControl.ItemTemplate>
      <TabControl.ContentTemplate>
        <DataTemplate DataType="viewModels:RunningJobViewModel">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="*"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            
              <TextBox Height="30" 
                       GotFocus="InputElement_OnGotFocus"
                       LostFocus="InputElement_OnLostFocus"
                       Text="{Binding ExecutedCommand}" 
                       Background="#474747" 
                       CornerRadius="0" 
                       BorderBrush="#6e6e6e" 
                       Padding="5"  Margin="0, 5,5, 10" BorderThickness="1" IsReadOnly="True" TextWrapping="Wrap" VerticalAlignment="Stretch"></TextBox>
              <Panel Grid.Row="1" IsVisible="{Binding CurrentTroubleshootingMessage, Converter={x:Static ObjectConverters.IsNotNull}}" Background="{Binding CurrentTroubleShootingSeverity, Converter={x:Static viewModels:TroubleShootingSeverityToBrushConverter.Instance}}" Opacity="0.5" ZIndex="10"></Panel>
              <ScrollViewer Grid.Row="1" IsVisible="{Binding CurrentTroubleshootingMessage, Converter={x:Static ObjectConverters.IsNotNull}}" ZIndex="11">
                  <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                      <TextBlock Margin="0,0,0,10" HorizontalAlignment="Center" TextAlignment="Center" Foreground="White" FontSize="26" >¯\_(ツ)_/¯</TextBlock>
                      <SelectableTextBlock HorizontalAlignment="Center" TextAlignment="Center"  Text="{Binding CurrentTroubleshootingMessage}" Foreground="White" FontSize="26"></SelectableTextBlock>
                      <Button Margin="20" Padding="10" HorizontalAlignment="Center" FontSize="26" Command="{Binding DismissTroubleshootingMessage}">Dismiss</Button>
                  </StackPanel>
              </ScrollViewer>
              <ScrollViewer Grid.Row="1" ScrollChanged="ScrollChangedHandler" BringIntoViewOnFocusChange="False" Margin="0,0,0,10">
                  <SelectableTextBlock TextWrapping="Wrap" Margin="0"  Classes="consoleOutput"  Inlines="{Binding RichOutput}" ></SelectableTextBlock>
              </ScrollViewer>
              <StackPanel Grid.Row="2" IsVisible="{Binding ExecutionPending, Mode=OneWay}" Margin="0, 0, 0,10">
                  <Panel IsVisible="{Binding CurrentInteractiveInputs.Count}" Margin="0,0,0,10">
                      <ItemsRepeater ItemsSource="{Binding CurrentInteractiveInputs}">
                          <ItemsRepeater.Layout>
                              <StackLayout Spacing="10"
                                           Orientation="Horizontal" />
                          </ItemsRepeater.Layout>
                          <ItemsRepeater.ItemTemplate>
                              <DataTemplate x:DataType="scriptConfigs:InteractiveInputItem">
                                  <Button Classes="secondary" Padding="20,5" Content="{Binding Label}" Command="{Binding $parent[ItemsRepeater].DataContext.ExecuteInteractiveInput}" CommandParameter="{Binding Value}"></Button>
                              </DataTemplate>
                          </ItemsRepeater.ItemTemplate>
                      
                      </ItemsRepeater>
                  </Panel>
                  <TextBox  Text="{Binding InputCommand, Mode=TwoWay}" KeyUp="AcceptCommand"  Margin="0,0,10,0" FontFamily="Consolas"></TextBox>
              </StackPanel>
            
            <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,0,0,10" IsVisible="{Binding ExecutionPending}">
              <ProgressBar Classes="executionProgressBar" IsIndeterminate="{Binding ExecutionPending}" />
              <ToggleButton Width="100" HorizontalContentAlignment="Center" Margin="10,0" IsChecked="{Binding FollowOutput, Mode=TwoWay}" ToolTip.Tip="Automatically scroll to bottom when new output appears">Follow output</ToggleButton>
              <Button  Width="60" HorizontalContentAlignment="Center" Margin="10,0" Command="{Binding CancelExecution}" IsEnabled="{Binding !KillAvailable}" >Cancel</Button>
              <Button  Width="60" HorizontalContentAlignment="Center" Command="{Binding Kill}" IsVisible="{Binding KillAvailable}" Background="Firebrick">Kill</Button>
            </StackPanel>
          </Grid>

        </DataTemplate>
      </TabControl.ContentTemplate>

    </TabControl>
</UserControl>

